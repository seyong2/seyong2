---
layout: post
title: CatBoost
subtitle: Part 2 - Comparison of different encoding methods
gh-repo: seyong2
gh-badge: [star, fork, follow]
tags: [Statistics, Machine Learning, CatBoost, Encoding, One-Hot Encoding, Label Encoding, Target Encoding]
comments: true
---

In this article, my main focus will be on implementing the CatBoost algorithm discussed in my previous post on an actual dataset. If you haven't had a chance to read it yet, I recommend checking out [CatBoost Part 1 - How CatBoost deals with categorical features](https://seyong2.github.io/2023-05-21-catboost1/). The dataset I'll be working with involves the salaries of data scientists and will be used to predict their experience levels using the machine learning algorithm. If you'd like more information about the data, you can refer to [Data Science Salaries 2023](https://www.kaggle.com/datasets/arnabchaki/data-science-salaries-2023). However, instead of immediately diving into the modeling aspect, I'll first explore the dataset to gain a better understanding of the relationships between its variables. To begin, let's take a look at the first five rows of the data.

| `work_year` | `experience_level` | `employment_type` | `job_title` | `salary` | `salary_currency` | `salary_in_usd`	| `employee_residence` | `remote_ratio` | `company_location` | `company_size` |
| :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: |
| 2023 | SE | FT | Principal Data Scientist | 80000	| EUR | 85847 | ES | 100 | ES | L |
| 2023 | MI | CT | ML Engineer | 30000	| USD | 30000 | US | 100 | US | S |
| 2023 | MI | CT | ML Engineer | 25500	| USD | 25500 | US | 100 | US | S |
| 2023 | SE | FT | Data Scientist | 175000	| USD | 175000 | CA | 100 | CA | M |
| 2023 | SE | FT | Data Scientist | 120000	| USD | 120000 | CA | 100 | CA | M |

There are a total of 11 columns, with the `experience_level` column acting as the target variable for classification. The column names give us a hint about what each column represents, but we can find a detailed description of each column in the following table. Upon examining the content of the first five rows, we can also observe that the variables can be classified as either numerical or categorical. The table below indicates the column types, which are designated as either `int64` for numeric or `object` for categorical. The table also indicates that there are no missing values in the data. With a total of 3,755 rows, the "Non-Null Count" column shows that all values in the last column of the table are listed as '3755 non-null', which means that none of the features have missing values for the 3,755 rows of data.

| Column | Description |
| :---: | :---: |
| `work_year` | The year the salary was paid |
| `experience_level` | The experience level in the job during the year | 
| `employment_type` | The type of employment for the role |
| `job_title` | The role worked in during the year |
| `salary` | The total gross salary amount paid |
| `salary_currency` | The currency of the salary paid as an ISO 4217 currency code |
| `salary_in_usd` | The salary in USD |
| `employee_residence` | Employee's primary country of residence in during the work year as an ISO 3166 country code |
| `remote_ratio` | The overall amount of work done remotely | 
| `company_location` | The country of the employer's main office or contracting branch |
| `company_size` | The median number of people that worked for the company during the year |

| Column | Type | Non-Null Count |
| :---: | :---: | :---: |
| work_year | int64 | 3755 non-null |
| experience_level | object | 3755 non-null |
| employment_type | object | 3755 non-null |
| job_title | object | 3755 non-null |
| salary | int64 | 3755 non-null |
| salary_currency | object | 3755 non-null |
| salary_in_usd | int64 | 3755 non-null |
| employee_residence | object | 3755 non-null |
| remote_ratio | int64 | 3755 non-null |
| company_location | object | 3755 non-null |
| company_size | object | 3755 non-null |

Now that we have the brief grasp of the data, we will get into more details by examining one variable at a time. The first variable to look at is `salary_in_usd`, which is the predictor. Although we also have `salary`, we will not pay attention to it because it is more convenient to compare salaries in the same currency, not in different local currencies. Therefore, we will drop `salary`, and `salary_currency` as they are irrelevant for the analysis that we are trying to do in this post. The most common plot drawn to study a numerical variable would be a histogram as it helps show how the data is distributed. Then, the histogram of `salary_in_usd` tells us that the average salary is around 14,000 the data is right-skewed, although the level of the skewness is not that extreme. 

![hist_salary](https://github.com/seyong2/seyong2.github.io/assets/41242974/bda87f63-ebbc-444a-8516-82ef27ae2842)

